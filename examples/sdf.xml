<shader version="330">
	<uniforms>
	</uniforms>

	<vertex><![CDATA[

		DEFINE_VAO_2D_DEFAULT

		out block
		{
			vec3 rayOrg;
			vec3 rayDir;			
		} OUT;

		void main(void)
		{
			OUT.rayOrg = vec3(position.xy, 1.0);
			OUT.rayDir = vec3(0.0, 0.0, -1.0);
		   	gl_Position = position;
		}

	]]></vertex>

	<fragment><![CDATA[
		in block
		{
			vec3 rayOrg;
			vec3 rayDir;
		} IN;

		out vec4 color;

		float sdSphere(vec3 p, vec3 center, float sz)
		{
			return length(p - center) - sz;
		}

		float sdTorus(vec3 p, vec2 t)
		{
			vec2 q = vec2(length(p.xz)-t.x,p.y);
			return length(q)-t.y;
		}

		float opUnion(float d1, float d2)
		{
			return min(d1, d2);
		}

		float opUnionSmooth(float d1, float d2, float k)
		{
    		float h = clamp( 0.5+0.5*(d2-d1)/k, 0.0, 1.0 );
    		return mix( d2, d1, h ) - k*h*(1.0-h);
		}

		float sampleDistanceField(vec3 pos)
		{
			return opUnionSmooth(
				sdSphere(pos, vec3(0.0), 0.5),
				sdSphere(pos, vec3(0.3, 0.0, 0.0), 0.4),
				0.01
				);
		}

		void main (void)
		{
			vec3 currentPos = IN.rayOrg;

			for (int i=0; i<32; i++)
			{
				float dist = abs(sampleDistanceField(currentPos));

				if (dist < 0.0001)
				{
					color = vec4(currentPos, 1.0);
					return;
				}

				currentPos += IN.rayDir * dist;
			}

			color = vec4(0.0, 0.0, 0.0, 0.0);
		}
	]]></fragment>
</shader>